{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  constructor() {}\n  intercept(request, next) {\n    let token = localStorage.getItem('token');\n    console.log(token);\n    if (token) {\n      request = request.clone({\n        headers: request.headers.set('authorization', 'Bearer ' + token)\n      });\n    }\n    return next.handle(request);\n  }\n}\nAuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n  return new (t || AuthInterceptor)();\n};\nAuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthInterceptor,\n  factory: AuthInterceptor.ɵfac\n});","map":{"version":3,"mappings":";AAUA,OAAM,MAAOA,eAAe;EAE1BC,eAAe;EAEfC,SAAS,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAIC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACzCC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;IAClB,IAAIA,KAAK,EAAE;MACTF,OAAO,GAAGA,OAAO,CAACO,KAAK,CAAC;QAEtBC,OAAO,EAAGR,OAAO,CAACQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAG,SAAS,GAAGP,KAAK;OAClE,CAAC;;IAEJ,OAAOD,IAAI,CAACS,MAAM,CAACV,OAAO,CAAC;EAC7B;;AAdWH,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAc,SAAfd,eAAe;AAAA","names":["AuthInterceptor","constructor","intercept","request","next","token","localStorage","getItem","console","log","clone","headers","set","handle","factory"],"sourceRoot":"","sources":["C:\\Users\\mosta\\Desktop\\Project\\crm-project-front\\src\\app\\interceptors\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    let token = localStorage.getItem('token');\n    console.log(token);\n    if (token) {\n      request = request.clone({\n        \n        headers : request.headers.set('authorization' , 'Bearer ' + token)\n      })\n    }\n    return next.handle(request);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}