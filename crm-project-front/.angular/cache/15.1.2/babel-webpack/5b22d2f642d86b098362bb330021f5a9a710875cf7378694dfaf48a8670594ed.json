{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/global.service\";\nimport * as i3 from \"@angular/common\";\nfunction SingleProjectsComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5)(2, \"a\");\n    i0.ɵɵelement(3, \"img\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h4\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Bulding : \", item_r1.buldingNum, \"\");\n  }\n}\nexport class SingleProjectsComponent {\n  constructor(activated, global) {\n    this.activated = activated;\n    this.global = global;\n    this.baseUrl = \"http://localhost:3000/public/images/uploads/\";\n    console.log(this.activated.snapshot.paramMap.get('projectId'));\n    let projectId = this.activated.snapshot.paramMap.get('projectId');\n    this.global.singleProject(projectId).subscribe(data => {\n      this.projectData = data.data;\n      this.buldingsData = this.projectData.buldings;\n      console.log(this.projectData);\n    });\n  }\n}\nSingleProjectsComponent.ɵfac = function SingleProjectsComponent_Factory(t) {\n  return new (t || SingleProjectsComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.GlobalService));\n};\nSingleProjectsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SingleProjectsComponent,\n  selectors: [[\"app-single-projects\"]],\n  decls: 8,\n  vars: 3,\n  consts: [[1, \"container-fluid\", \"p-3\", \"text-center\"], [1, \"col-12\", \"bg-light\", \"card\"], [1, \"row\", \"p-3\"], [\"class\", \"p-2 col-12 col-lg-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-2\", \"col-12\", \"col-lg-4\"], [1, \"bg-dark\", \"card\", \"p-2\"], [\"src\", \"https://img.freepik.com/free-vector/building-concept-illustration_114360-4469.jpg?w=2000\", \"height\", \"300\", \"alt\", \"\", 1, \"card\"]],\n  template: function SingleProjectsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n      i0.ɵɵtext(3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"p\");\n      i0.ɵɵtext(5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2);\n      i0.ɵɵtemplate(7, SingleProjectsComponent_div_7_Template, 6, 1, \"div\", 3);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(ctx.projectData.projectName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.projectData.description);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.buldingsData);\n    }\n  },\n  dependencies: [i3.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAKQA,8BAAmF;IAExEA,yBAAqI;IAAAA,iBAAI;IAC5IA,0BAAI;IAAAA,YAA6B;IAAAA,iBAAK;;;;IAAlCA,eAA6B;IAA7BA,2DAA6B;;;ACCjD,OAAM,MAAOC,uBAAuB;EAKlCC,YAAoBC,SAA0B,EAAWC,MAAsB;IAA3D,cAAS,GAATD,SAAS;IAA4B,WAAM,GAANC,MAAM;IAF/D,YAAO,GAAG,8CAA8C;IAGtDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,SAAS,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC9D,IAAIC,SAAS,GAAG,IAAI,CAACP,SAAS,CAACI,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,WAAW,CAAC;IACjE,IAAI,CAACL,MAAM,CAACO,aAAa,CAACD,SAAS,CAAC,CAACE,SAAS,CAACC,IAAI,IAAE;MACnD,IAAI,CAACC,WAAW,GAAGD,IAAI,CAACA,IAAI;MAC5B,IAAI,CAACE,YAAY,GAAG,IAAI,CAACD,WAAW,CAACE,QAAQ;MAC7CX,OAAO,CAACC,GAAG,CAAC,IAAI,CAACQ,WAAW,CAAC;IAC/B,CAAC,CAAC;EACJ;;AAbWb,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDTpCrB,8BAA6C;MAErCA,YAA2B;MAAAA,iBAAK;MACpCA,yBAAG;MAAAA,YAA2B;MAAAA,iBAAI;MAClCA,8BAAqB;MACjBA,wEAKM;MACVA,iBAAM;;;MATFA,eAA2B;MAA3BA,iDAA2B;MAC5BA,eAA2B;MAA3BA,iDAA2B;MAEwBA,eAAkB;MAAlBA,0CAAkB","names":["i0","SingleProjectsComponent","constructor","activated","global","console","log","snapshot","paramMap","get","projectId","singleProject","subscribe","data","projectData","buldingsData","buldings","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\mosta\\Desktop\\Project\\crm-project-front\\src\\app\\components\\single-projects\\single-projects.component.html","C:\\Users\\mosta\\Desktop\\Project\\crm-project-front\\src\\app\\components\\single-projects\\single-projects.component.ts"],"sourcesContent":["<div class=\"container-fluid p-3 text-center\">\r\n   <div class=\"col-12 bg-light card\">\r\n    <h3>{{projectData.projectName}}</h3>\r\n    <p>{{projectData.description}}</p>\r\n    <div class=\"row p-3\">\r\n        <div class=\"p-2 col-12 col-lg-4\" *ngFor=\"let item of buldingsData , let i = index\">\r\n            <div class=\"bg-dark card p-2\">\r\n                <a><img src=\"https://img.freepik.com/free-vector/building-concept-illustration_114360-4469.jpg?w=2000\" class=\"card\" height=\"300\" alt=\"\"></a>\r\n                <h4>Bulding : {{item.buldingNum}}</h4>\r\n            </div>\r\n        </div>\r\n    </div>    \r\n</div>","import { Component } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { GlobalService } from 'src/app/services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-single-projects',\r\n  templateUrl: './single-projects.component.html',\r\n  styleUrls: ['./single-projects.component.css']\r\n})\r\nexport class SingleProjectsComponent {\r\n  projectData : any\r\n  buldingsData : any\r\n  baseUrl = \"http://localhost:3000/public/images/uploads/\"\r\n  \r\n  constructor(private activated : ActivatedRoute , private global : GlobalService){\r\n    console.log(this.activated.snapshot.paramMap.get('projectId'))\r\n    let projectId = this.activated.snapshot.paramMap.get('projectId')\r\n    this.global.singleProject(projectId).subscribe(data=>{\r\n      this.projectData = data.data\r\n      this.buldingsData = this.projectData.buldings\r\n      console.log(this.projectData);\r\n    })\r\n  }\r\n  }\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}