{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/global.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LoginComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"p\");\n    i0.ɵɵtext(2, \"Reqired\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"p\");\n    i0.ɵɵtext(2, \"Invalid National ID\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"p\");\n    i0.ɵɵtext(2, \"Reqired\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class LoginComponent {\n  constructor(global) {\n    this.global = global;\n    this.errorFlag = false;\n    this.errMessage = '';\n    this.submitFlag = false;\n    this.userData = {\n      userName: '',\n      password: ''\n    };\n    this.loginForm = new FormGroup({\n      userName: new FormControl(\"\", [Validators.required, Validators.pattern(\"^[1 | 2 | 3][0-9]{13}$\")]),\n      password: new FormControl(\"\", [Validators.required])\n    });\n  }\n  get Data() {\n    return this.loginForm.controls;\n  }\n  handleSubmit() {\n    if (this.loginForm.valid) {\n      this.global.login(this.userData).subscribe(res => {\n        console.log(res);\n      }, () => {}, () => {});\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.GlobalService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 20,\n  vars: 4,\n  consts: [[1, \"vh-100\", \"bg-image\", 2, \"background-image\", \"url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp')\"], [1, \"mask\", \"d-flex\", \"align-items-center\", \"h-100\", \"gradient-custom-3\"], [1, \"container\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-md-9\", \"col-lg-7\", \"col-xl-6\"], [1, \"card\", 2, \"border-radius\", \"15px\"], [1, \"card-body\", \"p-5\"], [1, \"text-uppercase\", \"text-center\", \"mb-5\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-outline\"], [\"type\", \"text\", \"formControlName\", \"userName\", \"placeholder\", \"National ID\", 1, \"form-control\", \"form-control-lg\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"form-outline\", \"my-4\"], [\"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", \"form-control-lg\"], [1, \"d-flex\", \"justify-content-center\"], [\"type\", \"button\", 1, \"btn\", \"btn-dark\", \"btn-block\", \"btn-lg\", \"gradient-custom-4\", \"text-success\"], [1, \"alert\", \"alert-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"h2\", 7);\n      i0.ɵɵtext(8, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n        return ctx.handleSubmit();\n      });\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵelement(11, \"input\", 10);\n      i0.ɵɵtemplate(12, LoginComponent_div_12_Template, 3, 0, \"div\", 11);\n      i0.ɵɵtemplate(13, LoginComponent_div_13_Template, 3, 0, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 12);\n      i0.ɵɵelement(15, \"input\", 13);\n      i0.ɵɵtemplate(16, LoginComponent_div_16_Template, 3, 0, \"div\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 14)(18, \"button\", 15);\n      i0.ɵɵtext(19, \"Login\");\n      i0.ɵɵelementEnd()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitFlag && (ctx.Data == null ? null : ctx.Data[\"userName\"] == null ? null : ctx.Data[\"userName\"].errors == null ? null : ctx.Data[\"userName\"].errors[\"required\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((ctx.Data == null ? null : ctx.Data[\"userName\"] == null ? null : ctx.Data[\"userName\"].dirty) || ctx.submitFlag) && (ctx.Data == null ? null : ctx.Data[\"userName\"] == null ? null : ctx.Data[\"userName\"].errors == null ? null : ctx.Data[\"userName\"].errors[\"pattern\"]));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.submitFlag && (ctx.Data == null ? null : ctx.Data[\"password\"] == null ? null : ctx.Data[\"password\"].errors == null ? null : ctx.Data[\"password\"].errors[\"required\"]));\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,EAAGC,SAAS,EAAGC,UAAU,QAAQ,gBAAgB;;;;;;;ICWnDC,+BAA+F;IAAGA,uBAAO;IAAAA,iBAAI;;;;;IAC7GA,+BAA6H;IAAGA,mCAAmB;IAAAA,iBAAI;;;;;IAMvJA,+BAA+F;IAAGA,uBAAO;IAAAA,iBAAI;;;ADX/H,OAAM,MAAOC,cAAc;EAezBC,YAAoBC,MAAoB;IAApB,WAAM,GAANA,MAAM;IAd1B,cAAS,GAAG,KAAK;IACjB,eAAU,GAAG,EAAE;IACf,eAAU,GAAG,KAAK;IAElB,aAAQ,GAAU;MAChBC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC;KACV;IAED,cAAS,GAAG,IAAIP,SAAS,CAAC;MACxBM,QAAQ,EAAE,IAAIP,WAAW,CAAC,EAAE,EAAG,CAACE,UAAU,CAACO,QAAQ,EAAGP,UAAU,CAACQ,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;MACpGF,QAAQ,EAAE,IAAIR,WAAW,CAAC,EAAE,EAAG,CAACE,UAAU,CAACO,QAAQ,CAAC;KACrD,CAAC;EAEwC;EAE1C,IAAIE,IAAI;IAAI,OAAO,IAAI,CAACC,SAAS,CAACC,QAAQ;EAAA;EAE1CC,YAAY;IACV,IAAG,IAAI,CAACF,SAAS,CAACG,KAAK,EAAC;MACtB,IAAI,CAACT,MAAM,CAACU,KAAK,CAAC,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAG;QAChDC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAElB,CAAC,EAAG,MAAI,CAER,CAAC,EAAE,MAAI,CACP,CAAC,CACA;;EAEH;;AA9BSf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BvB,kCAC2G;MAOjDA,qBAAK;MAAAA,iBAAK;MAEtDA,+BAA0D;MAA5BA;QAAA,OAAYwB,kBAAc;MAAA,EAAC;MAEvDxB,+BAA0B;MACxBA,6BAA8G;MAC9GA,kEAAmH;MACnHA,kEAA6J;MAC/JA,iBAAM;MAGNA,gCAA+B;MAC7BA,6BAA+G;MAC/GA,kEAAmH;MACrHA,iBAAM;MAENA,gCAA2C;MAE8BA,sBAAK;MAAAA,iBAAS;;;MAhBnFA,eAAuB;MAAvBA,yCAAuB;MAIQA,eAA4D;MAA5DA,+LAA4D;MAC5DA,eAA0F;MAA1FA,gSAA0F;MAM1FA,eAA4D;MAA5DA,+LAA4D","names":["FormControl","FormGroup","Validators","i0","LoginComponent","constructor","global","userName","password","required","pattern","Data","loginForm","controls","handleSubmit","valid","login","userData","subscribe","res","console","log","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\mosta\\Desktop\\Project\\crm-project-front\\src\\app\\components\\login\\login.component.ts","C:\\Users\\mosta\\Desktop\\Project\\crm-project-front\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Login } from 'src/app/interfaces/login';\r\nimport { GlobalService } from 'src/app/services/global.service';\r\nimport { FormControl , FormGroup , Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent {\r\n  errorFlag = false;\r\n  errMessage = '';\r\n  submitFlag = false;\r\n\r\n  userData : Login ={\r\n    userName:'',\r\n    password:''\r\n  }\r\n\r\n  loginForm = new FormGroup({\r\n    userName: new FormControl(\"\" , [Validators.required , Validators.pattern(\"^[1 | 2 | 3][0-9]{13}$\")]), \r\n    password: new FormControl(\"\" , [Validators.required]),\r\n  })\r\n\r\n  constructor(private global:GlobalService){}\r\n\r\n  get Data() {return this.loginForm.controls}\r\n\r\n  handleSubmit(){\r\n    if(this.loginForm.valid){\r\n      this.global.login(this.userData).subscribe((res)=>{\r\n        console.log(res);\r\n        \r\n      } , ()=>{\r\n    \r\n      }, ()=>{\r\n      }\r\n      )\r\n    }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n","<section class=\"vh-100 bg-image\"\r\n  style=\"background-image: url('https://mdbcdn.b-cdn.net/img/Photos/new-templates/search-box/img4.webp');\">\r\n  <div class=\"mask d-flex align-items-center h-100 gradient-custom-3\">\r\n    <div class=\"container h-100\">\r\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n        <div class=\"col-12 col-md-9 col-lg-7 col-xl-6\">\r\n          <div class=\"card\" style=\"border-radius: 15px;\">\r\n            <div class=\"card-body p-5 \" >\r\n              <h2 class=\"text-uppercase text-center mb-5\">Login</h2>\r\n\r\n              <form [formGroup]=\"loginForm\" (ngSubmit)=\"handleSubmit()\">\r\n\r\n                <div class=\"form-outline\">\r\n                  <input type=\"text\" class=\"form-control form-control-lg\" formControlName=\"userName\" placeholder=\"National ID\"/>\r\n                  <div class=\"alert alert-danger\" *ngIf=\"submitFlag && Data?.['userName']?.errors?.['required']\"><p>Reqired</p></div>\r\n                  <div class=\"alert alert-danger\" *ngIf=\"(Data?.['userName']?.dirty || submitFlag) && Data?.['userName']?.errors?.['pattern']\"><p>Invalid National ID</p></div>\r\n                </div>\r\n\r\n                \r\n                <div class=\"form-outline my-4\">\r\n                  <input type=\"password\" class=\"form-control form-control-lg\" formControlName=\"password\" placeholder=\"Password\"/>\r\n                  <div class=\"alert alert-danger\" *ngIf=\"submitFlag && Data?.['password']?.errors?.['required']\"><p>Reqired</p></div>\r\n                </div>\r\n\r\n                <div class=\"d-flex justify-content-center\">\r\n                  <button type=\"button\"\r\n                    class=\"btn btn-dark btn-block btn-lg gradient-custom-4 text-success\">Login</button>\r\n                </div>\r\n\r\n              </form>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}