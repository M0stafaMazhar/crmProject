{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GlobalService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/api/';\n  }\n  getProjects() {\n    return this.http.get(this.baseUrl + \"project/show/all\");\n  }\n  getRoles() {\n    return this.http.get(this.baseUrl + \"role/show-all\");\n  }\n  register(obj) {\n    return this.http.post(this.baseUrl + \"user/register\", obj);\n  }\n  login(obj) {\n    return this.http.post(this.baseUrl + \"user/login\", obj);\n  }\n  deleteProject(id) {\n    return this.http.delete(this.baseUrl + \"project/delete/\" + id);\n  }\n  singleProject(id) {\n    return this.http.get(this.baseUrl + \"project/show/\" + id);\n  }\n  getUsers() {\n    return this.http.get(this.baseUrl + \"user/all\");\n  }\n  deleteUser(id) {\n    return this.http.delete(this.baseUrl + \"user/delete/\" + id);\n  }\n  showUser(id) {\n    return this.http.get(this.baseUrl + \"user/show/\" + id);\n  }\n}\nGlobalService.ɵfac = function GlobalService_Factory(t) {\n  return new (t || GlobalService)(i0.ɵɵinject(i1.HttpClient));\n};\nGlobalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GlobalService,\n  factory: GlobalService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAExBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IADxB,YAAO,GAAG,4BAA4B;EACC;EACvCC,WAAW;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,OAAO,GAAC,kBAAkB,CAAC;EACvD;EAEAC,QAAQ;IACN,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,OAAO,GAAC,eAAe,CAAC;EACpD;EAEAE,QAAQ,CAACC,GAAY;IACnB,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACJ,OAAO,GAAC,eAAe,EAAGG,GAAG,CAAC;EAC3D;EAEAE,KAAK,CAACF,GAAS;IACb,OAAO,IAAI,CAACN,IAAI,CAACO,IAAI,CAAC,IAAI,CAACJ,OAAO,GAAC,YAAY,EAAGG,GAAG,CAAC;EACxD;EAEAG,aAAa,CAACC,EAAM;IAClB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,IAAI,CAACR,OAAO,GAAC,iBAAiB,GAACO,EAAE,CAAC;EAC5D;EAEAE,aAAa,CAACF,EAAM;IAClB,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,OAAO,GAAC,eAAe,GAACO,EAAE,CAAC;EACvD;EAEAG,QAAQ;IACN,OAAO,IAAI,CAACb,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,OAAO,GAAC,UAAU,CAAC;EAC/C;EAEAW,UAAU,CAACJ,EAAS;IAClB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,IAAI,CAACR,OAAO,GAAC,cAAc,GAACO,EAAE,CAAC;EACzD;EAEAK,QAAQ,CAACL,EAAS;IAChB,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAC,IAAI,CAACC,OAAO,GAAC,YAAY,GAACO,EAAE,CAAC;EACpD;;AArCWZ,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAkB,SAAblB,aAAa;EAAAmB,YAFZ;AAAM","names":["GlobalService","constructor","http","getProjects","get","baseUrl","getRoles","register","obj","post","login","deleteProject","id","delete","singleProject","getUsers","deleteUser","showUser","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\mosta\\Desktop\\Project\\crm-project-front\\src\\app\\services\\global.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Register } from '../interfaces/register';\r\nimport { Login } from '../interfaces/login';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GlobalService {\r\n  baseUrl = 'http://localhost:3000/api/';\r\n  constructor(private http:HttpClient) { }\r\n  getProjects():Observable<any>{\r\n    return this.http.get(this.baseUrl+\"project/show/all\")\r\n  }\r\n\r\n  getRoles():Observable<any>{\r\n    return this.http.get(this.baseUrl+\"role/show-all\")  \r\n  }\r\n  \r\n  register(obj:Register):Observable<any>{\r\n    return this.http.post(this.baseUrl+\"user/register\" , obj)  \r\n  }\r\n\r\n  login(obj:Login):Observable<any>{\r\n    return this.http.post(this.baseUrl+\"user/login\" , obj)  \r\n  }\r\n\r\n  deleteProject(id:any):Observable<any>{\r\n    return this.http.delete(this.baseUrl+\"project/delete/\"+id)  \r\n  }\r\n\r\n  singleProject(id:any):Observable<any>{\r\n    return this.http.get(this.baseUrl+\"project/show/\"+id)  \r\n  }\r\n\r\n  getUsers():Observable<any>{\r\n    return this.http.get(this.baseUrl+\"user/all\")  \r\n  }\r\n\r\n  deleteUser(id:string):Observable<any>{\r\n    return this.http.delete(this.baseUrl+\"user/delete/\"+id) \r\n  }\r\n\r\n  showUser(id:string):Observable<any>{\r\n    return this.http.get(this.baseUrl+\"user/show/\"+id) \r\n  }\r\n\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}